version: 2
general:
  branches:
    only:
      - dev-py3 # list of branches to build
jobs:
  build:
    docker:
      - image: buildpack-deps:trusty
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Clean CircleCI
          command: |
            rm -rf ~/.pyenv;
            rm -rf ~/virtualenvs;
      - restore_cache:
          keys:
            - pip-cache
            - miniconda-cache
      - run:
          name: Install apt packages
          command: |
            cat /etc/*release
            sudo apt-get update
            sudo apt-get install -y libwebkitgtk-3.0-dev libjpeg-dev libtiff-dev \
              libgtk2.0-dev libsdl1.2-dev libgstreamer-plugins-base0.10-dev \
              freeglut3 freeglut3-dev libnotify-dev
            sudo apt-get install -y git curl libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0
            sudo apt-get install --fix-missing -y xvfb
      - run:
          name: Spin up Xvfb
          command: |
            /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;
            echo "export DISPLAY=:99" >> $BASH_ENV;
      - run:
          name: Install miniconda
          command: |
            if [ ! -d "~/miniconda3" ]; then
              wget -q http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh;
              chmod +x ~/miniconda.sh;
              ~/miniconda.sh -b -p ~/miniconda3;
              echo "export PATH=~/miniconda3/bin:$PATH" >> $BASH_ENV;
            else
              echo "Miniconda3 already set up.";
            fi
      - save_cache:
          key: miniconda-cache
          paths:
            - ~/.cache/miniconda
      - run:
          name: Setup Python environment
          command: |
            conda update --yes --quiet conda;
            conda create -n testenv --yes python=3.6;
            source activate testenv;
            pip install -U pip wheel;
            pip install -r requirements/requirements-std.txt --ignore-installed;
            pip install -r requirements/requirements-dev.txt --ignore-installed;
            pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-14.04 wxPython;
      - run:
          name: Install ORIGAMI
          command: |
            source activate testenv;
            python setup.py develop
      - run:
          name: Run ORIGAMI
          command: |
            source activate testenv;
            pytest .
      - save_cache:
          key: pip-cache
          paths:
            - ~/.cache/pip
