name: Tests

on: [push]

jobs:
  style:
    runs-on: ubuntu-latest
    name: "Verify code style"
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          pip install --upgrade pip  # || pip3 install --upgrade pip
          pip install -r requirements/requirements-std.txt
          pip install flake8
      #       - name: Change directory
      #         run: |
      #           cd origami
      - name: Lint with flake8
        run: |
          flake8 .

  tests:
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7] #, 3.8]  # wxpython for linux 3.8 is not available yet
        os: [ubuntu-latest, windows-latest] #, macOS-latest]  # some bug in macOS version I don't care to investigate yet
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    name: "Tests"

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements-std.txt
          pip install -r requirements/requirements-dev.txt
      - name: Install wxPython (Windows/macOS)
        if: runner.os != 'Linux'
        run: |
          pip install -U wxPython
          pip install -r requirements/requirements-win32.txt
      - name: Install wxPython (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update --assume-yes
          sudo apt-get install --assume-yes git curl libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0 libwebkit2gtk-4.0
          pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-18.04 wxPython
      - name: Test with pytest (Linux)
        if: runner.os == 'Linux'
        run: |
          xvfb-run -a pytest -m "not guitest" .
      - name: Test with pytest (Windows/macOS)
        if: runner.os != 'Linux'
        run: |
          pytest  -m "not guitest" . -v

  guitests:
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7] #, 3.8]  # wxpython for linux 3.8 is not available yet
        os: [ubuntu-latest, windows-latest] #, macOS-latest]  # some bug in macOS version I don't care to investigate yet
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    name: "Tests (GUI)"

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements-std.txt
          pip install -r requirements/requirements-dev.txt
      - name: Install wxPython (Windows/macOS)
        if: runner.os != 'Linux'
        run: |
          pip install -U wxPython
          pip install -r requirements/requirements-win32.txt
      - name: Install wxPython (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update --assume-yes
          sudo apt-get install --assume-yes git curl libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0 libwebkit2gtk-4.0
          pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-18.04 wxPython
      - name: Test with pytest (Linux)
        if: runner.os == 'Linux'
        run: |
          xvfb-run -a pytest  -m guitest .
      - name: Test with pytest (Windows/macOS)
        if: runner.os != 'Linux'
        run: |
          pytest -m guitest . -v

  coverage:
    name: "Coverage"
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@master
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements-std.txt
          pip install -r requirements/requirements-dev.txt
          pip install -r requirements/requirements-win32.txt
          pip install -U wxPython
      - name: Test with pytest
        run: |
          pytest --cov=origami --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests

  install:
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.7] #, 3.8]  # wxpython for linux 3.8 is not available yet
        os: [windows-latest] #, macOS-latest]  # some bug in macOS version I don't care to investigate yet
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    name: "Install & test"

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/requirements-std.txt
          pip install -r requirements/requirements-dev.txt
          pip install -r requirements/requirements-win32.txt
          pip install -U wxPython
      - name: Install ORIGAMI
        run: |
          python setup.py install
      - name: Test ORIGAMI
        run: |
          pytest . -v

#   install:
#     name: "Install and test"

#    strategy:
#      max-parallel: 4
#      matrix:
#        os: [ubuntu-latest, windows-latest, macOS-latest]
# #
#    name: "Verify installation on ${{ matrix.os }}."
#    runs-on: "${{ matrix.os }}"
#
#    steps:
#      - uses: "actions/checkout@v2"
#      - uses: "actions/setup-python@v1"
#        with:
#          python-version: "3.7"
#      - name: Install
#        run: |
#          python setup.py develop
#          python -c 'import origami; print(origami.__version__)'
